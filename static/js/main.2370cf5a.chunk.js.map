{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/AlternativeMessage.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","AlternativeMessage","props","className","style","all","img","src","avatar","alt","angle","item","name","message","time","Message","text","messageData","messageData2","HW1","Affair","grid","affair","priority","deleteButton","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","task","downButton","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","el","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","inputArea","value","onChange","event","currentTarget","errorTitle","buttonAdd","GreetingContainer","users","addUserCallback","setName","setError","length","trim","alert","HW3","setUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","e","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","HW4","setText","showAlert","checked","setChecked","column","testSpanError","blue","disabled","Header","Routes","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.2370cf5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__22pGH\",\"task\":\"Affairs_task__3oZPi\",\"downButton\":\"Affairs_downButton__1RjoL\",\"deleteButton\":\"Affairs_deleteButton__1u1P0\",\"grid\":\"Affairs_grid__2c9w4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"AlternativeMessage_all__6ju23\",\"img\":\"AlternativeMessage_img__1dFzN\",\"item\":\"AlternativeMessage_item__2w5lH\",\"name\":\"AlternativeMessage_name__3tRgI\",\"message\":\"AlternativeMessage_message__KfupE\",\"time\":\"AlternativeMessage_time__36ECL\",\"angle\":\"AlternativeMessage_angle__1p6Ff\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1-wB2\",\"avatar\":\"Message_avatar__2sWO9\",\"item\":\"Message_item__3VMIo\",\"text\":\"Message_text__1uUOa\",\"time\":\"Message_time__3FddO\",\"angle\":\"Message_angle__YEip9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1KL14\",\"error\":\"Greeting_error__2RRaZ\",\"buttonAdd\":\"Greeting_buttonAdd__1c1NH\",\"errorTitle\":\"Greeting_errorTitle__1Rlh6\",\"inputArea\":\"Greeting_inputArea__2PnMy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1opQX\",\"column\":\"HW4_column__wNSAC\",\"testSpanError\":\"HW4_testSpanError__3ec3z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3xLzg\",\"errorInput\":\"SuperInputText_errorInput__1YS5g\",\"error\":\"SuperInputText_error__v5Jj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3exw7\",\"red\":\"SuperButton_red__2LTLr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__YnVG0\",\"spanClassName\":\"SuperCheckbox_spanClassName__XjCR1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__va1TV\"};","import { type } from 'os'\r\nimport React from 'react'\r\nimport style from './AlternativeMessage.module.css'\r\n\r\ntype AlternativeMessageType ={\r\n    avatar:string;\r\n    name:string;\r\n    message:string;\r\n    time:string;\r\n}\r\n\r\n\r\nfunction AlternativeMessage(props:AlternativeMessageType) {\r\n    return (\r\n        <div className={style.all}>\r\n            <img className={style.img}  src={props.avatar} alt=\"Avatar\"/>\r\n            <div className={style.angle}></div>\r\n                <div className={style.item}>\r\n                    <div className={style.name}>{props.name}</div>\r\n                    <div className={style.message}>{props.message}</div>\r\n                    <div className={style.time}>{props.time}</div>\r\n                </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlternativeMessage\r\n","import React from 'react'\r\nimport style from './Message.module.css';\r\n\r\nexport type MessagePropsType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string,\r\n}\r\n\r\nfunction Message(props:MessagePropsType) {\r\n    return (\r\n        <div className={style.message}>\r\n            <img src={props.avatar} alt=\"avatar\" className={style.avatar} />\r\n\r\n            <div className={style.angle} />\r\n\r\n            <div className={style.item}>\r\n                <div className={style.text}>{props.name}</div>\r\n                <div className={style.text}>{props.message}</div>\r\n                <div className={style.time}>{props.time}</div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport AlternativeMessage from './AlternativeMessage'\r\nimport Message from './Message'\r\n\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'John Dogh',\r\n    message: \"Hey there! What's up man?\",\r\n    time: '22:00',\r\n}\r\n\r\nconst messageData2 = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'John Smith',\r\n    message: \"Hey there! What's up man? let's go to bouling!\",\r\n    time: '11:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr />\r\n            homework 1\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <AlternativeMessage\r\n                avatar={messageData2.avatar}\r\n                name={messageData2.name}\r\n                message={messageData2.message}\r\n                time={messageData2.time}\r\n             />\r\n\r\n\r\n            {/* <hr />\r\n            для личного творчества, могу проверить\r\n            <AlternativeMessage /> */}\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport style from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (value:number) =>void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n\r\n    return (\r\n        <div className={style.grid}>\r\n            <div>\r\n            {props.affair.name}</div>\r\n            <div>\r\n            {props.affair.priority}</div>\r\n            <button className={style.deleteButton} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport style from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (value: FilterType) => void\r\n    deleteAffairCallback: (value:number) =>void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')} // need to fix\r\n    const setHigh = () => {props.setFilter('high')}\r\n    const setMiddle = () => {props.setFilter('middle')}\r\n    const setLow = () => {props.setFilter('low')}\r\n\r\n    return (\r\n        <div className={style.task} >\r\n\r\n            {mappedAffairs}\r\n\r\n            <button className={style.downButton} onClick={setAll}>All</button>\r\n            <button className={style.downButton} onClick={setHigh}>High</button>\r\n            <button className={style.downButton} onClick={setMiddle}>Middle</button>\r\n            <button className={style.downButton} onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n}\r\nexport type FilterType = 'all' | 'high' | 'middle' | 'low'\r\n\r\n// constants\r\n\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType>  => {\r\n    if (filter === 'all') return affairs\r\n    else if( filter === 'high' ) return affairs.filter(el => el.priority === 'high')\r\n    else if( filter === 'middle' ) return affairs.filter(el => el.priority === 'middle')\r\n    else if( filter === 'low' ) return affairs.filter(el => el.priority === 'low')\r\n    else return affairs;\r\n}\r\n\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n\r\n    return affairs.filter(el => el._id !== _id);\r\n}\r\n\r\nfunction HW2() {\r\n\r\n    const [affairs, setAffairs] = useState(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => {\r\n        setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (value:string)=> void // need to fix any\r\n    addUser: ()=>void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = s.error // need to fix with (?:)\r\n\r\n\r\n    const onChangeHandler = (event:ChangeEvent<HTMLInputElement>)=> {\r\n        setNameCallback(event.currentTarget.value)\r\n    }\r\n\r\n    const onClickHandler = () => {\r\n        addUser()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.inputArea}>\r\n            <input value={name} onChange={onChangeHandler} className={name===''?inputClass:''}/>\r\n            <span className={s.errorTitle}>{error}</span>\r\n            <button onClick={onClickHandler} className={s.buttonAdd}>add </button>\r\n            <span>{totalUsers }</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name:string)=>void // need to fix any\r\n}\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\n\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (value: string) => { // need to fix any\r\n        setError('')\r\n        setName(value) // need to fix\r\n    }\r\n    const addUser = () => {\r\n\r\n        if( name.trim() ===''){\r\n            setError('Empty string!!!')\r\n            alert('Error: empty name')\r\n            return\r\n        }\r\n        addUserCallback(name.trim())\r\n        alert(`Hello ${name.trim()} !`) // need to fix\r\n\r\n    }\r\n   let totalUsers =users.length// need to fix\r\n\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        setUsers([{_id:v1(),name:name},...users])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput} ${className} ? ${error} : ''` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                  onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            // add NavLinks\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            {/*<Switch>*/}\r\n\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            {/*<Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\r\n\r\n            {/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\r\n                // add routes\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            {/*<Route render={() => <Error404/>}/>*/}\r\n\r\n            {/*</Switch>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            {/*<HashRouter>*/}\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            {/*</HashRouter>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction  App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}